#!/bin/bash

readonly DOTFILES_DIRECTORY="${HOME}/.dotfiles"
RETVAL="0"

init() {
  separator
  info "checking basic dependencies:"

  # Xcode
  if ! type xcode-select >&- && xpath=$( xcode-select --print-path ) && test -d "${xpath}" && test -x "${xpath}"; then
    info "running xcode-select"
    xcode-select --install
  else
    success "xcode is installed"
  fi

  # Home binaries folder
  if [[ ! -d $HOME/.bin ]]; then
    info "creating ${HOME}/.bin directory"
    mkdir $HOME/.bin
  else
    success "home binaries folder (~/.bin) exists"
  fi

  # SSH
  if [[ ! -d $HOME/.ssh ]]; then
    info "creating ${HOME}/.ssh directory"
    mkdir $HOME/.ssh
    chmod 700 $HOME/.ssh
  else
    success "ssh directory (~/.ssh) exists"
  fi

  # Homebrew
  if ! type_exists "brew"; then
    info "installing homebrew"
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  else
    success "homebrew is installed"
  fi

  RETVAL="0"
}

zsh() {
  separator
  info "configuring zsh"

  TEST_CURRENT_SHELL=$(expr "$SHELL" : '.*/\(.*\)')
  if [ "$TEST_CURRENT_SHELL" != "zsh" ]; then
    if hash chsh >/dev/null 2>&1; then
      user "changing shell to zsh"
      chsh -s $(grep /zsh$ /etc/shells | tail -1)
    else
      user "system does not include chsh. Please change your shell to zsh manually."
    fi
  else
    success "shell is already zsh. Skipping zsh setup."
  fi
}

main() {
  # Are we somehow not in the right place?
  if [[ ! -d ${DOTFILES_DIRECTORY} ]]; then
    info "cloning dotfiles into ${DOTFILES_DIRECTORY}"
    git clone --depth=1 https://github.com/fredoliveira/dotfiles.git ${DOTFILES_DIRECTORY}
  fi

  # Source the utilities file (see bin/utils)
  source ${DOTFILES_DIRECTORY}/bin/utils

  # Make sure basic dependencies (xcode, homebrew) are in place
  init

  # Install homebrew packages
  source ${DOTFILES_DIRECTORY}/bin/brew

  # Setup zsh as the shell
  zsh

  # Link the actual dotfiles
  link ${DOTFILES_DIRECTORY}

  # Return with the current return value
  exit $RETVAL
}

main "$@"
